    <TableContainer component={Paper}>
      <Table className={classes.table} aria-label="customized table">
        <TableHead>
          <TableRow>
            <StyledTableCell>Dessert (100g serving)</StyledTableCell>
            <StyledTableCell align="right">Calories</StyledTableCell>
            <StyledTableCell align="right">Fat&nbsp;(g)</StyledTableCell>
            <StyledTableCell align="right">Carbs&nbsp;(g)</StyledTableCell>
            <StyledTableCell align="right">Protein&nbsp;(g)</StyledTableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {rows.map((row) => (
            <StyledTableRow key={row.name}>
              <StyledTableCell component="th" scope="row">
                {row.name}
              </StyledTableCell>
              <StyledTableCell align="right">{row.calories}</StyledTableCell>
              <StyledTableCell align="right">{row.fat}</StyledTableCell>
              <StyledTableCell align="right">{row.carbs}</StyledTableCell>
              <StyledTableCell align="right">{row.protein}</StyledTableCell>
            </StyledTableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>




import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import CardHeader from '@material-ui/core/CardHeader';
import Typography from '@material-ui/core/Typography';
import Divider from '@material-ui/core/Divider';
import Avatar from '@material-ui/core/Avatar';
import Input from '@material-ui/core/Input';

    const pStyle = {
      fontSize: '15px',
      textAlign: 'center',
      padding: '1em',
      border: '1px solid black',
      borderRadius: '5px',
      margin: '0 auto',
      marginTop: '3em',
      marginBottom: '1em',
      backgroundColor: "#92B4A7",
      display: 'flex',
      flexDirection: 'row',
      flexWrap: 'wrap',
      width: '100%'
    };
    const uStyle = {
      height: '100%',
      marginRight: '1em'
    };
    const postStyle = {
      width: '100%',
      height: '100%',
      
    };
    
        if (!this.state.loaded) {
      return (
      <div className={useStyles.rootLoading}>
        <h2>Loading..</h2>
      <CircularProgress />
    </div>
        )
    } else {
          return (  
      this.state.items.map(p => {       
        //console.log(p.id)
             return (    
               
              
               <Card key={p.id} style={pStyle}>
                 
                 <div style={uStyle}>
                 <Input type="hidden" value={p.user_id}></Input>
                 <CardHeader  title={"#" + JSON.stringify(p.id) + "  " + p.title 
                + " by user ID " + JSON.stringify(p.user_id)}
                subheader={"Created at: " + p.created_at}
                  />                          
                 </div>
             <div style={postStyle}>
                <CardHeader avatar={
                  <Avatar aria-label="post">
                    {p.user_name.charAt(0).toUpperCase()}
                  </Avatar>}
                  title= {p.user_name + " " + p.last_name + "\n\n" }
                  subheader= {"Country: " +  p.country} 
                  style={ { backgroundColor: "#B7CDC4"}} />
                <Divider />
               <CardContent  style={ { backgroundColor: "#C3D5CD"}}>
               <Typography  component="h6">
               {p.content}
          </Typography>
          
               </CardContent>
              </div>
              <span>Edit </span>
              <span>Delete</span>
               </Card>
               
              )        
        })

    )
    }